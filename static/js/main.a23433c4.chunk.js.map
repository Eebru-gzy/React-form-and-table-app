{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"6PAcMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,sCAMVC,EAAY,SAAAC,GAEd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAW,kBACnBT,EAAMU,gBAAgBL,KADtB,eAMhB,OAAO,mCAAUJ,EAAV,MAKIU,EA1CD,SAAAX,GAAW,IAETE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBAEvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAkBA,EAAgBQ,gBAAmBA,M,OC8CjEE,E,2MApDbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACZ,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,wEAKV,IAAD,EACeS,KAAKR,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,2BAAOe,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GA5CvCO,aC4EJC,E,2MArCXd,MAAQ,CACJe,WAAY,I,EAGhBnB,gBAAkB,SAAAL,GAAU,IAChBwB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM3B,Q,EAMzBgB,aAAe,SAAAU,GACX,EAAKZ,SAAS,CACVU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,wEAKrC,IACEF,EAAeP,KAAKR,MAApBe,WAER,OACI,yBAAKI,UAAW,aACZ,kBAAC,EAAD,CAAO/B,cAAiB2B,EAAYnB,gBAAiBY,KAAKZ,kBAC1D,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GA9BvBM,a,MC/BlBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a23433c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Table = props =>  {\r\n    \r\n        const { characterData, removeCharacter } = props;\r\n\r\n        return (\r\n            <table>\r\n                <TableHeader/>\r\n                <TableBody characterData = { characterData } removeCharacter= { removeCharacter }/>\r\n            </table>\r\n        )\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick = {() => \r\n                    props.removeCharacter(index)}>Delete</button> \r\n                </td>\r\n            </tr>\r\n        )\r\n    }) \r\n    return <tbody> { rows } </tbody>\r\n}\r\n\r\n\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    job: \"\"\r\n  };\r\n\r\n  state = this.initialState;\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n   this.props.handleSubmit(this.state)\r\n   this.setState(this.initialState)\r\n\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n/*\r\nclass App extends Component {\r\n    render() {\r\n\r\n        const characters = [\r\n            {\r\n                name: 'Charlie',\r\n                job: 'Janitor',\r\n            },\r\n            {\r\n                name: 'Eebru',\r\n                job: 'actor',\r\n            },\r\n            {\r\n                name: 'Dee',\r\n                job: 'Dev',\r\n            },\r\n            {\r\n                name: 'Stutern',\r\n                job: 'Tutor',\r\n            },\r\n            {\r\n                name: 'Charlie',\r\n                job: 'Janitor',\r\n            },\r\n            \r\n        ]\r\n        return (\r\n            <div className='container'>\r\n                <Table charaters = { characters }/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        characters: [],\r\n    }\r\n\r\n    removeCharacter = index => {\r\n        const { characters } = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = character => { \r\n        this.setState({\r\n            characters: [...this.state.characters, character]\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { characters } = this.state\r\n\r\n        return (\r\n            <div className= 'container'>\r\n                <Table characterData = {characters} removeCharacter={this.removeCharacter}/>\r\n                <Form handleSubmit={this.handleSubmit}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}